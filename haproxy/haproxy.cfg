global
   log 127.0.0.1   local0         # Enable per-instance logging of events and traffic.
   log 127.0.0.1   local1 notice  # only send important events
   maxconn 4096                   # the server will handle up to 4096 simultaneous connections.
   user haproxy
   group haproxy
   daemon                         # the server will put itself in the background when launched.
   nbproc      2                  # number of processes when launched 2.

defaults
    # default mode will be http (as opposed to tcp)
    mode http
    # Enable early dropping of aborted requests pending in queues
    option abortonclose           
    # Set the maximum inactivity time on the client side
    timeout client  5000
    # Enable HTTP connection closing on the server side
    option http-server-close
    # Return a file contents instead of errors generated by HAProxy
    no option accept-invalid-http-request
    # Enable or disable relaxing of HTTP response parsing
    no option accept-invalid-http-response
    # By default, the first operational backup server gets all traffic when normal servers are all down
    option allbackups
    # Enable insertion of the X-Forwarded-For header to requests sent to servers
    option forwardfor except 127.0.0.1 header X-Forwarded-For
    # Enable session redistribution in case of connection failure.
    option redispatch             
    # Set the number of retries to perform on a server after a connection failure
    retries 3                     
    # Enable the saving of one ACK packet during the connect sequence
    option tcp-smart-connect      
    # Fix the maximum number of concurrent connections on a frontend
    maxconn 2000                  
    # Set the maximum time to wait for a connection attempt to a server to succeed
    contimeout      5000          
    # Set the maximum inactivity time on the client side
    clitimeout      50000         
    # Set the maximum inactivity time on the server side
    srvtimeout      50000         

#this frontend interface receives the incoming http requests
frontend all 192.168.122.152:80
    timeout client 1h
    # use apache2 as default webserver for incoming traffic
    default_backend nodejs_backend

    acl is_nodejs hdr_end(host) -i sirifacts.org
    use_backend nodejs_backend if is_nodejs

    acl is_websocket hdr_end(host) -i socket.io.tld
    use_backend nodejs_socket if is_websocket

    acl is_monit hdr_end(host) -i monit.io.tld
    use_backend monit_backend if is_monit

#apache backend, transfer to port 82
backend apache2
    # Define the load balancing algorithm to be used in a backend
    balance roundrobin
    # Enable insertion of the X-Forwarded-For header to requests sent to servers    
    option forwardfor
    server apache2 127.0.0.1:82 weight 1 maxconn 1024 check  
    # server must be contacted within 5 seconds
    timeout connect 5s
    # all headers must arrive within 3 seconds
    timeout http-request 3s
    # server must respond within 25 seconds. should equal client timeout
    timeout server 25s

#nodejs backend, transfer to port 3000
backend nodejs_backend
    # Set the running mode or protocol of the instance { tcp|http|health }
    #mode http
    #timeout server 1h
    #timeout connect 1s  
    # Enable passive HTTP connection closing
    #option httpclose
    balance roundrobin
    #cookie connect.id prefix indirect nocache
    cookie  SERVERID insert indirect nocache
    # Enable insertion of the X-Forwarded-For header to requests sent to servers    
    #option forwardfor
    server server1 192.168.122.1:3000 cookie server1
    server server2 192.168.122.1:3001 cookie server2
    server server3 192.168.122.1:3002 cookie server3


#websocket backend, transfer to port 9000
backend nodejs_socket
    # Set the running mode or protocol of the instance { tcp|http|health }
    mode http
    timeout server 86400000
    timeout connect 5000
    server io_test localhost:9000

#monit backend, transfer to port 2812
backend monit_backend
    # Set the running mode or protocol of the instance { tcp|http|health }
    mode http
    timeout server 1h
    timeout connect 1s  
    # Define whether haproxy will announce keepalive to the server or not
    option http-pretend-keepalive
    # Enable insertion of the X-Forwarded-For header to requests sent to servers   
    option forwardfor 
    server server1 127.0.0.1:2812 weight 1 maxconn 1024 check
